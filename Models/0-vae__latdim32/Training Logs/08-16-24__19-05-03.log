08/16/24 19:05:03 Training initiated with the following parameters:
Model Parameters: (('image_channels', 3), ('init_channels', 8), ('kernel_size', 14), ('padding', 12), ('latent_dim', 32), ('leak', 0.99), ('drop', 0.01), ('stochastic', True))
Encoder Parameters: (('image_channels', 3), ('init_channels', 8), ('kernel_size', 14), ('padding', 12), ('latent_dim', 32), ('leak', 0.99), ('drop', 0.01))
Decoder Parameters: (('image_channels', 3), ('init_channels', 8), ('kernel_size', 14), ('padding', 12), ('latent_dim', 32), ('leak', 0.99), ('drop', 0.01))

08/16/24 19:05:06 An error has occurred: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.
Traceback (most recent call last):
  File "C:\Users\ebaca\Desktop\CMB Research\CMB Remote Repository\Models\0-vae__latdim32\..\functions.py", line 158, in train
    batch_loss, reconstruction_loss = lsfn(batch, outputs, mean, log_var, kl_weight)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 42, in loss_function
  File "C:\Users\ebaca\anaconda3\envs\Phys417\Lib\site-packages\torch\nn\functional.py", line 3154, in binary_cross_entropy
    return torch._C._nn.binary_cross_entropy(input, target, weight, reduction_enum)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.

08/16/24 19:05:06 An error has occurred: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.
Traceback (most recent call last):
  File "C:\Users\ebaca\Desktop\CMB Research\CMB Remote Repository\Models\0-vae__latdim32\..\functions.py", line 158, in train
    batch_loss, reconstruction_loss = lsfn(batch, outputs, mean, log_var, kl_weight)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<string>", line 42, in loss_function
  File "C:\Users\ebaca\anaconda3\envs\Phys417\Lib\site-packages\torch\nn\functional.py", line 3154, in binary_cross_entropy
    return torch._C._nn.binary_cross_entropy(input, target, weight, reduction_enum)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ebaca\Desktop\CMB Research\CMB Remote Repository\Models\0-vae__latdim32\..\functions.py", line 247, in train
    self.save_checkpoint(epoch, optimizer, path='latest_saved_model.pth')
  File "C:\Users\ebaca\Desktop\CMB Research\CMB Remote Repository\Models\0-vae__latdim32\..\functions.py", line 89, in save_checkpoint
    torch.save(state, path)
  File "C:\Users\ebaca\anaconda3\envs\Phys417\Lib\site-packages\torch\serialization.py", line 628, in save
    _save(obj, opened_zipfile, pickle_module, pickle_protocol, _disable_byteorder_record)
  File "C:\Users\ebaca\anaconda3\envs\Phys417\Lib\site-packages\torch\serialization.py", line 859, in _save
    storage = storage.cpu()
              ^^^^^^^^^^^^^
  File "C:\Users\ebaca\anaconda3\envs\Phys417\Lib\site-packages\torch\storage.py", line 137, in cpu
    return torch.UntypedStorage(self.size()).copy_(self, False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ebaca\Desktop\CMB Research\CMB Remote Repository\Models\0-vae__latdim32\..\functions.py", line 255, in train
    torch.save(self.model.state_dict(), 'latest_saved_model.pth')
  File "C:\Users\ebaca\anaconda3\envs\Phys417\Lib\site-packages\torch\serialization.py", line 628, in save
    _save(obj, opened_zipfile, pickle_module, pickle_protocol, _disable_byteorder_record)
  File "C:\Users\ebaca\anaconda3\envs\Phys417\Lib\site-packages\torch\serialization.py", line 859, in _save
    storage = storage.cpu()
              ^^^^^^^^^^^^^
  File "C:\Users\ebaca\anaconda3\envs\Phys417\Lib\site-packages\torch\storage.py", line 137, in cpu
    return torch.UntypedStorage(self.size()).copy_(self, False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.

